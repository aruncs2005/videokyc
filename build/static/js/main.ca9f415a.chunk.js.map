{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","graphql/queries.js","components/Liveliness/Liveliness.js","components/Upload/Upload.js","components/Summary/Summary.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","listTodos","videoConstraints","width","height","facingMode","useState","gestures","setGestures","showSpinner","setShowSpinner","alertMessage","setAlertMessage","useEffect","gest_data","webcamRef","React","useRef","useCallback","current","getScreenshot","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","className","audio","ref","screenshotFormat","onClick","shuffled_gestures","array","i","length","j","Math","floor","random","temp","shuffleArray","setTimeout","imageSrc","console","log","imageSrc3","invoke_api","Form","Group","controlId","Label","Control","File","label","type","Container","Row","Col","xs","md","Image","src","rounded","Title","ProgressBar","now","Text","thumbnail","Table","responsive","initialState","name","description","withAuthenticator","setTodos","a","API","graphql","graphqlOperation","todoData","todos","data","items","fetchTodos","Navbar","bg","Brand","href","Tabs","Tab","title","Jumbotron","Liveliness","Upload","Summary","Boolean","window","location","hostname","match","awsmobile","Amplify","configure","awsExports","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca9f415a.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t257,\n\t\t7\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t258,\n\t\t8\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t259,\n\t\t9\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t260,\n\t\t10\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t261,\n\t\t11\n\t],\n\t\"./amplify-confirm-sign-in_8.entry.js\": [\n\t\t262,\n\t\t12\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t263,\n\t\t13\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t264,\n\t\t14\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t265,\n\t\t15\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t266,\n\t\t16\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t267,\n\t\t17\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t268,\n\t\t18\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t269,\n\t\t4\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t270,\n\t\t19\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t271,\n\t\t20\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t272,\n\t\t21\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t273,\n\t\t22\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t274,\n\t\t5\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t275,\n\t\t23\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 248;\nmodule.exports = webpackAsyncContext;","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getTodo = /* GraphQL */ `\n  query GetTodo($id: ID!) {\n    getTodo(id: $id) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTodos = /* GraphQL */ `\n  query ListTodos(\n    $filter: ModelTodoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        description\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","import React,{ useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport Button from 'react-bootstrap/Button'\nimport gest_data from './gestures.json'\nimport Alert from 'react-bootstrap/Alert'\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\n\nconst videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  };\n\nfunction shuffleArray(array) {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  export default () => {\n    const [gestures, setGestures] = useState([]);\n    const [showSpinner,setShowSpinner] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"You will be asked to do a series of random gestures which will enable us to detect a live feed.\");\n    \n    useEffect(() => {\n      setGestures(gest_data[\"gestures\"])\n    }, []);\n\n    const invoke_api = (shuffled_gestures) => {\n      setShowSpinner(false);\n      const imageSrc = webcamRef.current.getScreenshot();\n      console.log(\"Gesture name ::\",shuffled_gestures[0][\"description\"]);\n      console.log(\"based 64 data :::\",imageSrc);\n      setTimeout(() => {\n        const imageSrc2 = webcamRef.current.getScreenshot();\n        setAlertMessage(shuffled_gestures[1][\"description\"]);\n        setShowSpinner(true);\n        setTimeout(() => {\n          const imageSrc3 = webcamRef.current.getScreenshot();\n          console.log(\"Gesture name ::\",shuffled_gestures[1][\"description\"]);\n          console.log(\"based 64 data :::\",imageSrc3);\n          setShowSpinner(false);\n        }, 3000);\n      }, 3000);\n      // make api call here \n     \n\n    }\n\n    const start_test = () => {\n      let shuffled_gestures = shuffleArray(gestures)\n      setShowSpinner(true)\n      // wait for 3 seconds capture picture\n      \n      // wait for 100 ms and take snapshot\n      setAlertMessage(shuffled_gestures[0][\"description\"]);\n      setTimeout(() => invoke_api(shuffled_gestures), 3000);\n\n      \n    }\n\n    const webcamRef = React.useRef(null);\n   \n    const capture = React.useCallback(\n      () => {\n        const imageSrc = webcamRef.current.getScreenshot();\n      },\n      [webcamRef]\n    );\n   \n    return (\n      <>\n         <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    {alertMessage}\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                    {/* <Alert variant=\"primary\">\n    <h5 className=\"text-center\">{alertMessage}</h5>\n        </Alert> */}\n        {showSpinner && <div className=\"spinner\" ></div>}\n        <div className=\"video-padding\">\n        <Webcam\n          audio={false}\n          height={450}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          width={800}\n          videoConstraints={videoConstraints}\n\n        />\n        </div>\n           <p className=\"live-button-align\">\n            <Button variant=\"outline-dark\" className=\"button-padding\" onClick={start_test}>Start</Button>\n          </p>\n\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n\n        </Accordion>\n      </>\n    );\n  };","import React from \"react\";\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\n\n export default () => {\n   \n       return (\n      <>\n         <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Please upload your ID documents.\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                    <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Choose document type</Form.Label>\n            <Form.Control as=\"select\">\n            <option>Adhaar Card</option>\n            <option>PAN</option>\n            <option>Passport</option>\n            </Form.Control>\n        </Form.Group>\n\n            <Form.Group>\n                <Form.File id=\"exampleFormControlFile1\" label=\"Upload the selected ID document\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                    Submit Documents\n             </Button>\n        </Form>\n\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n        \n        </Accordion>\n      </>\n    );\n  };","import React,{ useState, useEffect } from \"react\";\nimport Image from 'react-bootstrap/Image'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Table from 'react-bootstrap/Table'\n\nexport default () => {\n    return (\n\n        <div>\n            <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Overall KYC Status\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>Congrats KYC successfully done !!!!!</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Face Match Details.\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n\n                    <Container>\n                        <Row>\n                            <Col xs={6} md={4}>\n                            <Image src=\"result1.png\" rounded />\n                            </Col>\n                            <Col xs={6} md={4}>\n                            <Card>\n                                <Card.Header as=\"h5\">Face Match Details</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>Match score</Card.Title>\n                                    <ProgressBar now=\"95\" label=\"95 %\" />\n                                    <Card.Text>\n                                    Photo on left is the live picture and photo on right is obtained from ID document.\n                                    </Card.Text>\n                                   \n                                </Card.Body>\n                            </Card>\n                            \n                            </Col>\n                            <Col xs={6} md={4} className=\"summary-image\">\n                            <Image src=\"result2.png\" thumbnail />\n                            </Col>\n                        </Row>\n                    </Container>\n\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                       Data Extracted from ID documents.\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <Container>\n                            <Row>\n                           \n                            <Table responsive>\n                               \n                                <tbody>\n                                    <tr>\n                                    \n                                    <td>Name</td>\n                                    <td>Arun Kumar L</td>\n                                    </tr>\n                                    <tr>\n                                   \n                                    <td>Date of Birth</td>\n                                    <td>13/11/1987</td>\n                                    </tr>\n                                    <tr>\n                                   \n                                    <td>Gender</td>\n                                    <td>Male</td>\n                                    </tr>\n                                    <tr>\n                                   \n                                   <td>ID Document Type</td>\n                                   <td>Aadhar</td>\n                                   </tr>\n                                   <tr>\n                                   \n                                   <td>ID Document Number</td>\n                                   <td>XXXX-XXXX-2323</td>\n                                   </tr>\n                                </tbody>\n                                </Table>\n                          \n                            </Row>\n                        </Container>\n\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n\n            \n            </Accordion>\n        </div>\n    )\n};","/* src/App.js */\nimport React, { useEffect, useState } from 'react'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { createTodo } from './graphql/mutations'\nimport { listTodos } from './graphql/queries'\nimport { withAuthenticator,AmplifySignOut } from '@aws-amplify/ui-react'\nimport Webcam from \"react-webcam\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Alert from \"react-bootstrap/Alert\"\n\nimport Liveliness from './components/Liveliness'\n\nimport Upload from './components/Upload'\nimport Summary from './components/Summary'\n\nimport './App.css'\n\nconst initialState = { name: '', description: '' }\n\n\nconst App = () => {\n  const [formState, setFormState] = useState(initialState)\n  const [todos, setTodos] = useState([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  function setInput(key, value) {\n    setFormState({ ...formState, [key]: value })\n  }\n\n  async function fetchTodos() {\n    try {\n      const todoData = await API.graphql(graphqlOperation(listTodos))\n      const todos = todoData.data.listTodos.items\n      setTodos(todos)\n    } catch (err) { console.log('error fetching todos') }\n  }\n\n  async function addTodo() {\n    try {\n      if (!formState.name || !formState.description) return\n      const todo = { ...formState }\n      setTodos([...todos, todo])\n      setFormState(initialState)\n      await API.graphql(graphqlOperation(createTodo, {input: todo}))\n    } catch (err) {\n      console.log('error creating todo:', err)\n    }\n  }\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  };\n\n  \n  return (\n   <div>\n  <Container>\n  <Row>\n    <Col>\n    <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#\"><h2 className=\"app-title\">Video KYC</h2></Navbar.Brand>\n      <span className=\"logout\">\n      <AmplifySignOut/>\n      </span>\n    </Navbar>\n    </Col>\n  </Row>\n  <Row><Col><br></br></Col></Row>\n  <Row>\n    <Col>\n    <Tabs defaultActiveKey=\"welcome\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"welcome\" title=\"Welcome\">\n    <Jumbotron>\n  <h2 className=\"tab-element-align\">Welcome to video KYC</h2>\n  <p className=\"tab-element-align\">\n    The KYC process consists of 3 simple steps. \n      <ul>\n          <li>Liveliness Detection - The user will do a series of face gestures to determine whether its a live feed</li>\n          <li>Upload Documents - upload valid ID documents to use for verification.</li>\n          <li>Validation and summary</li>\n      </ul>\n  </p>\n  <p className=\"tab-button-align\">\n    <Button variant=\"primary\">Start</Button>\n  </p>\n</Jumbotron>\n  </Tab>\n  <Tab eventKey=\"Liveliness\" title=\"Liveliness Test\">\n\n    <div><Liveliness/></div>\n  </Tab>\n  <Tab eventKey=\"UploadDocs\" title=\"Upload Documents\">\n  <div ><Upload/></div>\n  </Tab>\n  <Tab eventKey=\"summary\" title=\"Summary\">\n  <Summary/>\n  </Tab>\n</Tabs>\n    </Col>\n  </Row>\n  </Container>\n  </div>\n   \n   \n\n  )\n}\n\nconst styles = {\n  container: { width: '100%', margin: '0 auto', display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'center', padding: 20 },\n  todo: {  marginBottom: 15 },\n  input: { border: 'none', backgroundColor: '#ddd', marginBottom: 10, padding: 8, fontSize: 18 },\n  todoName: { fontSize: 20, fontWeight: 'bold' },\n  todoDescription: { marginBottom: 0 },\n  button: { backgroundColor: 'black', color: 'white', outline: 'none', fontSize: 18, padding: '12px 0px' }\n}\n\nexport default withAuthenticator(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://vc3acjvlxvhv7krfvltvahiz5e.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-hjshdlclojddhcmwy2v2moztve\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:94375a60-921c-4901-97b5-a9dfb603e3d6\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_i65vp3s3t\",\n    \"aws_user_pools_web_client_id\": \"7voq7afnm97j3rlr4gi0on7800\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Amplify from \"aws-amplify\";\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}